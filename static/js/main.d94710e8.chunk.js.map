{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["ContactForm","state","name","props","number","onFormSubmit","event","preventDefault","contacts","map","contact","includes","alert","id","uuidv4","handleFormSubmit","formReset","changeInputValue","target","value","setState","className","onSubmit","this","htmlFor","type","onChange","required","autoComplete","pattern","Component","defaultProps","Filter","filter","changeFilterInputValue","autoFocus","ContactList","deleteContact","toLowerCase","onClick","Phonebook","useState","setContacts","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","contactId","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d94710e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const names = this.props.contacts.map(contact => contact.name);\r\n    if (names.includes(this.state.name)) {\r\n      alert(`${this.state.name} is already in contacts.`);\r\n    } else {\r\n      const contact = { id: uuidv4(), name: this.state.name, number: this.state.number };\r\n      this.props.handleFormSubmit(contact);\r\n    }\r\n    this.formReset();\r\n  };\r\n\r\n  changeInputValue = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formReset = () => this.setState({ name: '', number: '' });\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"Phonebook__form\" onSubmit={this.onFormSubmit}>\r\n        <label htmlFor=\"Phonebook-form__name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Phonebook-form__name\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.changeInputValue}\r\n          required\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <label htmlFor=\"Phonebook-form__number\">Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"Phonebook-form__number\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.changeInputValue}\r\n          required\r\n          autoComplete=\"off\"\r\n          pattern=\"^[ 0-9]+$\"\r\n        ></input>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ filter, changeFilterInputValue }) => {\r\n  return (\r\n    <>\r\n      <label className=\"find-contacts__label\" htmlFor=\"find-contacts-form__filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        type=\"search\"\r\n        id=\"find-contacts-form__filter\"\r\n        name=\"filter\"\r\n        className=\"find-contacts__input\"\r\n        value={filter}\r\n        onChange={changeFilterInputValue}\r\n        required\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  changeFilterInputValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, filter, deleteContact }) => {\r\n  return (\r\n    <ul className=\"contacts__list\">\r\n      {contacts\r\n        .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map(({ id, name, number }) => {\r\n          return (\r\n            <li className=\"contacts__item\" key={id}>\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button type=\"button\" className=\"btn\" onClick={() => deleteContact(id)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\n\r\nimport './Phonebook.scss';\r\n\r\n//* Phonebook хуками\r\nconst Phonebook = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    setContacts(JSON.parse(localStorage.getItem('contacts')) || []);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const changeFilterInputValue = event => setFilter(event.target.value);\r\n\r\n  const handleFormSubmit = contact => setContacts([...contacts, contact]);\r\n\r\n  const deleteContact = contactId => setContacts(prev => prev.filter(contact => contact.id !== contactId));\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"main-title\">Phonebook</h1>\r\n      <ContactForm handleFormSubmit={handleFormSubmit} contacts={contacts} />\r\n      <h2 className=\"title__contacts\">Contacts</h2>\r\n      <Filter filter={filter} changeFilterInputValue={changeFilterInputValue} />\r\n      <ContactList contacts={contacts} filter={filter} deleteContact={deleteContact} />\r\n    </>\r\n  );\r\n};\r\n\r\n//* Phonebook классом\r\n// import { Component } from 'react';\r\n// class Phonebook extends Component {\r\n//   static defaultProps = {\r\n//     contacts: [],\r\n//     filter: '',\r\n//   };\r\n\r\n//   state = {\r\n//     contacts: this.props.contacts,\r\n//     filter: this.props.filter,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const localStorageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n//     localStorageContacts && this.setState({ contacts: localStorageContacts });\r\n//     // if (localStorageContacts) { // если массив не пустой, то вернет true, если пустой, то вернет null (false)\r\n//     //   this.setState({ contacts: localStorageContacts });\r\n//     // }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     prevState.contacts !== this.state.contacts && localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     // if (prevState.contacts !== this.state.contacts) {\r\n//     //   localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     // }\r\n//   }\r\n\r\n//   changeFilterInputValue = event => this.setState({ filter: event.target.value });\r\n\r\n//   handleFormSubmit = contact => this.setState({ contacts: [...this.state.contacts, contact] });\r\n\r\n//   deleteContact = contactId =>\r\n//     this.setState(prevState => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactId) }));\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h1 className=\"main-title\">Phonebook</h1>\r\n//         <ContactForm handleFormSubmit={this.handleFormSubmit} contacts={this.state.contacts} />\r\n//         <h2 className=\"title__contacts\">Contacts</h2>\r\n//         <Filter filter={this.state.filter} changeFilterInputValue={this.changeFilterInputValue} />\r\n//         <ContactList contacts={this.state.contacts} filter={this.state.filter} deleteContact={this.deleteContact} />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nPhonebook.defaultProps = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nimport './App.scss';\n\nfunction App() {\n  return <Phonebook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}